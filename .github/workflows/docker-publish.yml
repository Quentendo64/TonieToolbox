name: Build and Publish Docker Image

on:
  release:
    types: [published]
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY_DOCKERHUB: docker.io
  REGISTRY_GITHUB: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract version
        id: extract_version
        run: |
          VERSION=$(grep -oP "__version__\s*=\s*'\K[^']+" TonieToolbox/__init__.py || grep -oP '__version__\s*=\s*"\K[^"]+' TonieToolbox/__init__.py)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Check Docker Hub credentials
        id: check_dockerhub_creds
        if: github.event_name != 'pull_request'
        run: |
          if [ -z "${{ secrets.DOCKERHUB_USERNAME }}" ] || [ -z "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
            echo "::warning::Docker Hub credentials are not configured. Skipping Docker Hub push."
            echo "push_to_dockerhub=false" >> $GITHUB_OUTPUT
          else
            echo "push_to_dockerhub=true" >> $GITHUB_OUTPUT
          fi

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request' && steps.check_dockerhub_creds.outputs.push_to_dockerhub == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_DOCKERHUB }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          logout: true

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_GITHUB }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ steps.check_dockerhub_creds.outputs.push_to_dockerhub == 'true' && format('{0}/{1}', env.REGISTRY_DOCKERHUB, env.IMAGE_NAME) || '' }}
            ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=auto
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=raw,value=${{ steps.extract_version.outputs.VERSION }},enable=true
            type=semver,pattern={{version}},value=${{ steps.extract_version.outputs.VERSION }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.extract_version.outputs.VERSION }}
            type=semver,pattern={{major}},value=${{ steps.extract_version.outputs.VERSION }}
            type=ref,event=branch
            type=sha,format=long

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max